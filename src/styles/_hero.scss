@use "./variables";
@use "./breakpoints" as bp;
@font-face {
  font-family: 'Bavex';
  src: url('/fonts/Bavex.woff2') format('woff2'),
       url('/fonts/Bavex.woff') format('woff'),
       url('/fonts/Bavex.ttf') format('truetype');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
  font-synthesis: none;
}

h1, h2, h3, h4, h5, h6 {
  font-family: 'Bavex', serif;
  font-weight: 400;
  margin: 0;
}

$animationDuration: 30;
$amount: 12;

$colors: variables.$bubble-colors;

.hero-wrapper {
  position: relative;
  min-height: calc(100vh - var(--v-layout-top, 0px));
  overflow: hidden;

  background:
    linear-gradient(to bottom, rgba(variables.$color-white, 0) 70%, variables.$color-white 100%),
    variables.$color-white;

  @include bp.respond(md) {
    height: calc(100vh - var(--v-layout-top, 0px));
  }
}

.bubble-layer {
  position: absolute;
  inset: 0;
  pointer-events: none;
  overflow: hidden;

  span {
    position: absolute;
    border-radius: 50%;
    mix-blend-mode: multiply;
    animation-name: float;
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
    filter: blur(10px);
  }

  @for $i from 1 through $amount {
    span:nth-child(#{$i}) {
      $particleSize: (random(60) + 60) * 1vmin;
      width: $particleSize;
      height: $particleSize;

      $color: nth($colors, random(length($colors)));
      background: radial-gradient(
        circle,
        rgba($color, 0.9) 0%,
        rgba($color, 0.4) 40%,
        rgba(variables.$color-white, 0) 100%
      );

      top: random(100) * 1%;
      right: (random(50) + 50) * 1%;
      animation-duration: (random($animationDuration * 10) / 10) * 1s + 120s;
      animation-delay: random(($animationDuration + 60s) * 10) / 10 * -1s;
      transform-origin: (random(50) - 25) * 1vw (random(50) - 25) * 1vh;
    }
  }
}

@keyframes float {
  0%   { transform: translateY(0) rotate(0deg); }
  50%  { transform: translateY(-20vh) rotate(180deg); }
  100% { transform: translateY(0) rotate(360deg); }
}

.hero-content {
  height: 100%;
  position: relative;
  z-index: 1;
}

.hero-column {
  height: auto;

  @include bp.respond(md) {
    height: 100%;
  }
}

.text-block {
  max-width: 500px;
  text-align: center;
  margin: 0 auto;

  .hero-skills,
  .hero-links {
    justify-content: center;
    padding-left: 0;
  }

  h1 {
    font-size: 4.5em;
    line-height: 1.1;
    margin-bottom: 8px;
    font-weight: 400;
    color: variables.$color-black;
    position: relative;

    &::after {
      content: none;
    }
  }

  .subheading {
    font-family: 'Bavex', serif;
    font-size: 1.5em;
    font-weight: 400;
    color: variables.$color-gray;
    margin-bottom: 24px;
  }
}

.portrait {
  border-radius: 50%;
  aspect-ratio: 1 / 1;
  object-fit: cover;
  width: 100%;
  height: auto;
  max-width: 400px;
  margin-left: 2em;

  box-shadow: 0 2px 8px rgba(variables.$color-black, 0.1);
}

@include bp.respond-down(md) {
  .text-block {
    margin-top: 1rem;
  }

  .portrait {
    margin-left: 0;
    max-width: 300px;
    height: auto;
  }

  .text-block h1 {
    font-size: 3.5em;
  }
}

@include bp.respond-down(sm) {
  .text-block h1 {
    font-size: 3em;
  }

  .portrait {
    max-width: 250px;
    height: auto;
  }
}

.chip-black {
  color: variables.$color-black !important;
  border: 1.25px solid variables.$color-black !important;
  background: variables.$color-white !important;
  font-family: 'Bavex', serif !important;
  letter-spacing: 0.2px;
  box-shadow: 0 2px 6px rgba(variables.$color-black, 0.08);

  .v-chip__content {
    font-family: 'Bavex', serif !important;
    color: variables.$color-black !important;
  }
}

.links-black {
  a {
    color: variables.$color-black !important;
    text-decoration: none;

    &:hover {
      opacity: 0.8;
    }
  }

  .v-icon {
    color: currentColor !important;
  }
}

.hero-hidden {
  opacity: 1;
  transform: none;
}

@media (prefers-reduced-motion: no-preference) {
  .hero-hidden {
    opacity: 0;
    transform: translateY(var(--motion-distance));
    transition: opacity var(--motion-duration-medium) var(--motion-ease-standard),
                transform var(--motion-duration-medium) var(--motion-ease-standard);
  }

  .hero-hidden.visible {
    opacity: 1;
    transform: translateY(0);
  }
}

.scroll-indicator {
  position: absolute;
  bottom: 16px;
  left: 50%;
  animation: bounce 2s infinite;
  z-index: 1;
}

.scroll-arrow {
  display: block;
  margin: 0 auto;
  font-size: 32px;
  color: rgb(var(--v-theme-primary));
  opacity: 0.5;
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translate(-50%, 0);
  }
  40% {
    transform: translate(-50%, -10px);
  }
  60% {
    transform: translate(-50%, -5px);
  }
}
